name: 自动发布版本

on:
  push:
    branches: [ main, master ]
    
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        
      - name: 读取版本信息
        id: version
        run: |
          VERSION=$(cat latest.json | jq -r '.version')
          CURRENT_DATE=$(date +"%Y-%m-%d")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "CURRENT_DATE=$CURRENT_DATE" >> $GITHUB_ENV
          echo "版本号: $VERSION"
      
      - name: 更新 latest.json 文件中的 URL
        run: |
          # 获取当前仓库名称
          REPO_NAME="${GITHUB_REPOSITORY}"
          echo "仓库名称: $REPO_NAME"
          
          # 替换 latest.json 中的 URL
          sed -i 's|https://github.com/zyc-energy/zyc-assist-pro/|https://github.com/'${REPO_NAME}'/|g' latest.json
          
          # 更新发布日期
          CURRENT_DATE_TIME=$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")
          sed -i 's|"pub_date": ".*"|"pub_date": "'$CURRENT_DATE_TIME'"|g' latest.json
          
          # 显示更新后的内容
          cat latest.json
      
      - name: 准备发布文件
        id: prepare_files
        run: |
          # 创建发布文件列表
          FILES=""
          
          # 查找所有文件并添加到列表中
          for file in *; do
            if [ -f "$file" ]; then
              # 排除 .git 和 .github 目录下的文件
              if [[ "$file" != ".git"* && "$file" != ".github"* && "$file" != ".DS_Store" ]]; then
                FILES="$FILES$file\n"
              fi
            fi
          done
          
          # 将文件列表写入环境变量
          echo "FILES<<EOF" >> $GITHUB_ENV
          echo -e "$FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: 创建发布
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: 版本 ${{ env.VERSION }}
          body: |
            版本: ${{ env.VERSION }}
            发布日期: ${{ env.CURRENT_DATE }}
            
            请点击下方资源下载此版本。
          draft: false
          prerelease: false
          files: ${{ env.FILES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 